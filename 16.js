webpackJsonp([16],{470:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l=k(n(4)),a=k(n(2)),d=k(n(3)),o=k(n(5)),r=k(n(6)),u=n(0),c=k(u),s=k(n(477)),f=k(n(474)),i=k(n(662)),h=k(n(663)),p=k(n(664));function k(e){return e&&e.__esModule?e:{default:e}}var y=function(e){function t(){return(0,a.default)(this,t),(0,o.default)(this,(t.__proto__||(0,l.default)(t)).apply(this,arguments))}return(0,r.default)(t,e),(0,d.default)(t,[{key:"render",value:function(){return c.default.createElement("div",null,c.default.createElement(s.default,{title:"示例一",content:c.default.createElement(h.default,null),doc:i.default}),c.default.createElement(f.default,{source:p.default}))}}]),t}(u.Component);t.default=c.default.createElement(y,null),e.exports=t.default},474:function(e,t,n){e.exports=n(9)(1141)},475:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l=s(n(4)),a=s(n(2)),d=s(n(3)),o=s(n(5)),r=s(n(6)),u=s(n(0)),c=n(476);function s(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(e){(0,a.default)(this,t);var n=(0,o.default)(this,(t.__proto__||(0,l.default)(t)).call(this,e));return n.state={},n}return(0,r.default)(t,e),(0,d.default)(t,[{key:"render",value:function(){return u.default.createElement("div",null,u.default.createElement(c.UnControlled,{value:this.props.value,options:{mode:"javascript",theme:"material",readOnly:!0},onChange:function(e,t,n){}}))}}]),t}(u.default.Component);t.default=f,e.exports=t.default},476:function(e,t,n){e.exports=n(9)(1603)},477:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=s(n(4)),a=s(n(2)),d=s(n(3)),o=s(n(5)),r=s(n(6)),u=s(n(0)),c=(s(n(474)),s(n(475)));function s(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function t(e){(0,a.default)(this,t);var n=(0,o.default)(this,(t.__proto__||(0,l.default)(t)).call(this,e));return n.handleClick=function(){n.setState({visible:!n.state.visible})},n.state={visible:!1},n}return(0,r.default)(t,e),(0,d.default)(t,[{key:"render",value:function(){return u.default.createElement("div",null,u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("p",null,this.props.title),this.props.content,u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("a",{onClick:this.handleClick,href:"javasccript:;"},this.state.visible?"收起代码":"展开代码"),u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("div",null,this.state.visible?u.default.createElement(c.default,{value:this.props.doc}):null))}}]),t}(u.default.Component);t.default=f,e.exports=t.default},662:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\nimport React, { Component } from 'react'\nimport { Tree } from 'ttk-component'\nconst TreeNode = Tree.TreeNode\n\nexport default class Example1 extends Component {\n\n\thandleSelect(selectedKeys, info) {\n\t\tconsole.log('selected', selectedKeys, info);\n\t}\n\n\thandleCheck(checkedKeys, info) {\n\t\tconsole.log('onCheck', checkedKeys, info);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Tree\n\t\t\t\tcheckable\n\t\t\t\tdefaultExpandedKeys={['0-0-0', '0-0-1']}\n\t\t\t\tdefaultSelectedKeys={['0-0-0', '0-0-1']}\n\t\t\t\tdefaultCheckedKeys={['0-0-0', '0-0-1']}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\tonCheck={this.handleCheck}\n\t\t\t>\n\t\t\t\t<TreeNode title=\"parent 1\" key=\"0-0\">\n\t\t\t\t\t<TreeNode title=\"parent 1-0\" key=\"0-0-0\" disabled>\n\t\t\t\t\t\t<TreeNode title=\"leaf\" key=\"0-0-0-0\" disableCheckbox />\n\t\t\t\t\t\t<TreeNode title=\"leaf\" key=\"0-0-0-1\" />\n\t\t\t\t\t</TreeNode>\n\t\t\t\t\t<TreeNode title=\"parent 1-1\" key=\"0-0-1\">\n\t\t\t\t\t\t<TreeNode title={<span style={{ color: '#08c' }}>sss</span>} key=\"0-0-1-0\" />\n\t\t\t\t\t</TreeNode>\n\t\t\t\t</TreeNode>\n\t\t\t</Tree>\n\t\t)\n\t}\n}\n",e.exports=t.default},663:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=f(n(4)),a=f(n(2)),d=f(n(3)),o=f(n(5)),r=f(n(6)),u=n(0),c=f(u),s=n(128);function f(e){return e&&e.__esModule?e:{default:e}}var i=s.Tree.TreeNode,h=function(e){function t(){return(0,a.default)(this,t),(0,o.default)(this,(t.__proto__||(0,l.default)(t)).apply(this,arguments))}return(0,r.default)(t,e),(0,d.default)(t,[{key:"handleSelect",value:function(e,t){console.log("selected",e,t)}},{key:"handleCheck",value:function(e,t){console.log("onCheck",e,t)}},{key:"render",value:function(){return c.default.createElement(s.Tree,{checkable:!0,defaultExpandedKeys:["0-0-0","0-0-1"],defaultSelectedKeys:["0-0-0","0-0-1"],defaultCheckedKeys:["0-0-0","0-0-1"],onSelect:this.handleSelect,onCheck:this.handleCheck},c.default.createElement(i,{title:"parent 1",key:"0-0"},c.default.createElement(i,{title:"parent 1-0",key:"0-0-0",disabled:!0},c.default.createElement(i,{title:"leaf",key:"0-0-0-0",disableCheckbox:!0}),c.default.createElement(i,{title:"leaf",key:"0-0-0-1"})),c.default.createElement(i,{title:"parent 1-1",key:"0-0-1"},c.default.createElement(i,{title:c.default.createElement("span",{style:{color:"#08c"}},"sss"),key:"0-0-1-0"}))))}}]),t}(u.Component);t.default=h,e.exports=t.default},664:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n# Tree 树\n\n\n## antd Tree API\n\n[详情请点击查看官方](https://ant.design/components/tree-cn/)\n\n### Tree props\n\n| 参数       | 说明                                      | 类型       | 默认值 |\n|-----------|------------------------------------------|------------|--------|\n|multiple | 支持点选多个节点（节点本身） | boolean | false |\n|checkable | 节点前添加 Checkbox 复选框 | boolean | false |\n|defaultExpandAll | 默认展开所有树节点 | boolean | false |\n|defaultExpandedKeys | 默认展开指定的树节点 | string[] | [] |\n|expandedKeys | （受控）展开指定的树节点 | string[] | [] |\n|autoExpandParent | 是否自动展开父节点 | boolean | true |\n|defaultCheckedKeys | 默认选中复选框的树节点 | string[] | [] |\n|checkedKeys | （受控）选中复选框的树节点（注意：父子节点有关联，如果传入父节点key，则子节点自动选中；相应当子节点key都传入，父节点也自动选中。当设置`checkable`和`checkStrictly`，它是一个有`checked`和`halfChecked`属性的对象，并且父子节点的选中与否不再关联 | string[] or  {checked: string[], halfChecked: string[]} | [] |\n|checkStrictly| checkable状态下节点选择完全受控（父子节点选中状态不再关联）| boolean | false |\n|defaultSelectedKeys | 默认选中的树节点 | string[] | [] |\n|selectedKeys | （受控）设置选中的树节点 | string[] | - |\n|onExpand | 展开/收起节点时触发 | function(expandedKeys, {expanded: bool, node}) | - |\n|onCheck | 点击复选框触发 | function(checkedKeys, e:{checked: bool, checkedNodes, node, event}) | - |\n|onSelect | 点击树节点触发 | function(selectedKeys, e:{selected: bool, selectedNodes, node, event}) | - |\n|filterTreeNode | 按需筛选树节点（高亮），返回true | function(node) | - |\n|loadData | 异步加载数据 | function(node)| - |\n|onRightClick | 响应右键点击 | function({event, node}) | - |\n|draggable | 设置节点可拖拽（IE>8） | boolean | false |\n|onDragStart | 开始拖拽时调用 | function({event, node}) | - |\n|onDragEnter | dragenter 触发时调用 | function({event, node, expandedKeys}) | - |\n|onDragOver | dragover 触发时调用 | function({event, node}) | - |\n|onDragLeave | dragleave 触发时调用 | function({event, node}) | - |\n|onDragEnd | dragend 触发时调用 | function({event, node}) | - |\n|onDrop | drop 触发时调用 | function({event, node, dragNode, dragNodesKeys}) | - |\n|showLine | 是否展示连接线 | boolean | false |\n|showIcon | 是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式 | boolean | false |\n\n### TreeNode props\n\n| 参数       | 说明                                      | 类型       | 默认值 |\n|-----------|------------------------------------------|------------|--------|\n|disabled | 禁掉响应 | boolean | false |\n|disableCheckbox | 禁掉 checkbox | boolean | false |\n|title | 标题 | string or ReactNode | '---' |\n|key | 被树的 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys 属性所用。注意：整个树范围内的所有节点的 key 值不能重复！ | string | 内部计算出的节点位置 |\n|isLeaf | 设置为叶子节点 | boolean | false |\n\n## 注意\n\n树节点可以有很多，但在设置`checkable`时，将会花费更多的计算时间，因此我们缓存了一些计算结果（`this.treeNodesStates`）来复用，避免多次重复计算，以此提高性能。但这也带来了一些限制，当你异步加载树节点时，你需要这样渲染树：\n\n```jsx\n{this.state.treeData.length\n  ? <Tree>{this.state.treeData.map(data => <TreeNode />)}</Tree>\n  : 'loading tree'}\n```\n\n",e.exports=t.default}});